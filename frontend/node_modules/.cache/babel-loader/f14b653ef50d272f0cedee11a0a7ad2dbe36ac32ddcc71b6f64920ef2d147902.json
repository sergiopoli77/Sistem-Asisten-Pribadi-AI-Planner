{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\AiPlanner\\\\frontend\\\\src\\\\pages\\\\ChatAI.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"../assets/chatai.css\";\nimport { db } from \"../config/firebase\";\nimport { ref, push, set, update } from \"firebase/database\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatAI = ({\n  initialChat\n}) => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [currentChatId, setCurrentChatId] = useState(null);\n  const [isTyping, setIsTyping] = useState(false);\n  const [sessionId, setSessionId] = useState(null);\n  const chatBoxRef = useRef(null);\n\n  // Ambil username dari localStorage\n  const username = localStorage.getItem(\"username\") || \"guest\";\n\n  // Auto scroll to bottom\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages, isTyping]);\n\n  // Generate session ID saat mount\n  useEffect(() => {\n    // If we have an incoming initialChat (user chose Continue), load it\n    if (initialChat && initialChat.messages && initialChat.messages.length) {\n      setMessages(initialChat.messages);\n      setSessionId(initialChat.sessionId || initialChat.id || `session_${Date.now()}`);\n      setCurrentChatId(initialChat.id || null);\n      return;\n    }\n\n    // otherwise create a new session and show welcome\n    const newSessionId = `session_${Date.now()}`;\n    setSessionId(newSessionId);\n    setMessages([{\n      sender: \"ai\",\n      text: \"👋 Halo! Saya AI Planner Assistant. Saya siap membantu Anda mengatur jadwal, memberikan rekomendasi waktu produktif, dan menjawab pertanyaan seputar perencanaan kegiatan Anda!\",\n      timestamp: new Date().toISOString()\n    }]);\n  }, [initialChat]);\n\n  // Firebase reference untuk chat user\n  const chatRef = ref(db, `chats/${username}`);\n\n  // Simpan chat ke Firebase\n  const saveChatToFirebase = newMessages => {\n    var _safeMessages;\n    if (!sessionId) return;\n    // Firebase Realtime Database disallows `undefined` values. Ensure we\n    // remove any undefined properties (or replace them) before writing.\n    const sanitizeForFirebase = value => {\n      if (Array.isArray(value)) return value.map(sanitizeForFirebase);\n      if (value && typeof value === \"object\") {\n        const out = {};\n        Object.keys(value).forEach(k => {\n          const v = value[k];\n          if (v === undefined) return; // skip undefined properties\n          out[k] = sanitizeForFirebase(v);\n        });\n        return out;\n      }\n      return value;\n    };\n    const safeMessages = newMessages.map(m => sanitizeForFirebase(m));\n    const chatData = {\n      sessionId,\n      date: new Date().toISOString(),\n      messages: safeMessages,\n      lastMessage: ((_safeMessages = safeMessages[safeMessages.length - 1]) === null || _safeMessages === void 0 ? void 0 : _safeMessages.text) || \"\"\n    };\n\n    // If continuing an existing chat, update that record instead of pushing a new one\n    try {\n      if (currentChatId) {\n        const existingRef = ref(db, `chats/${username}/${currentChatId}`);\n        // overwrite with updated messages and date\n        set(existingRef, chatData);\n        return;\n      }\n    } catch (e) {\n      // fall back to push if update fails\n      console.warn('Failed to update existing chat, falling back to push:', e);\n    }\n    const newChatRef = push(chatRef);\n    set(newChatRef, chatData);\n  };\n\n  // helper: try extract text from backend AI response\n  const extractTextFromAiResponse = data => {\n    if (!data) return '';\n    // if backend returned normalized ai.text\n    if (typeof data.ai === 'string') return data.ai;\n    if (data.ai && typeof data.ai === 'object') {\n      // Common shapes\n      try {\n        var _data$ai$candidates, _data$ai$output, _data$ai$output$, _data$ai$output$$cont, _data$ai$output2, _data$ai$output2$;\n        // v1 style: candidates -> output -> content -> text\n        const cand = (_data$ai$candidates = data.ai.candidates) === null || _data$ai$candidates === void 0 ? void 0 : _data$ai$candidates[0];\n        if (cand) {\n          var _cand$output, _cand$output$, _cand$output$$content, _cand$output$$content2, _cand$output2, _cand$output2$, _cand$output2$$conten;\n          if (typeof cand === 'string') return cand;\n          const text1 = ((_cand$output = cand.output) === null || _cand$output === void 0 ? void 0 : (_cand$output$ = _cand$output[0]) === null || _cand$output$ === void 0 ? void 0 : (_cand$output$$content = _cand$output$.content) === null || _cand$output$$content === void 0 ? void 0 : (_cand$output$$content2 = _cand$output$$content[0]) === null || _cand$output$$content2 === void 0 ? void 0 : _cand$output$$content2.text) || ((_cand$output2 = cand.output) === null || _cand$output2 === void 0 ? void 0 : (_cand$output2$ = _cand$output2[0]) === null || _cand$output2$ === void 0 ? void 0 : (_cand$output2$$conten = _cand$output2$.content) === null || _cand$output2$$conten === void 0 ? void 0 : _cand$output2$$conten.text);\n          if (text1) return text1;\n          const cont = cand.content || cand;\n          if (typeof cont === 'string') return cont;\n        }\n\n        // direct output\n        const out = ((_data$ai$output = data.ai.output) === null || _data$ai$output === void 0 ? void 0 : (_data$ai$output$ = _data$ai$output[0]) === null || _data$ai$output$ === void 0 ? void 0 : (_data$ai$output$$cont = _data$ai$output$.content) === null || _data$ai$output$$cont === void 0 ? void 0 : _data$ai$output$$cont.text) || ((_data$ai$output2 = data.ai.output) === null || _data$ai$output2 === void 0 ? void 0 : (_data$ai$output2$ = _data$ai$output2[0]) === null || _data$ai$output2$ === void 0 ? void 0 : _data$ai$output2$.content);\n        if (out) return out;\n      } catch (e) {\n        // ignore\n      }\n      // fallback to stringified\n      return JSON.stringify(data.ai);\n    }\n    return '';\n  };\n\n  // parse lines like '⏰ 08:00 - Belajar React (2 jam)' or '08:00 - Activity (30 menit)'\n  const parseSchedulesFromText = text => {\n    if (!text) return [];\n    const lines = text.split(/\\r?\\n/).map(l => l.trim()).filter(Boolean);\n    const parsed = [];\n    const timeLineRegex = /(?:.*?)(\\d{1,2}:\\d{2})\\s*[-–—]\\s*(.+?)(?:\\s*\\(([^)]+)\\))?$/;\n    for (const line of lines) {\n      const m = line.match(timeLineRegex);\n      if (m) {\n        const time = m[1];\n        const activity = m[2].trim();\n        const duration = m[3] ? m[3].trim() : '1 jam';\n        parsed.push({\n          time,\n          activity,\n          duration,\n          priority: 'Sedang'\n        });\n      }\n    }\n    return parsed;\n  };\n\n  // Handle send message (calls backend AI, falls back to local generator)\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const prompt = input.trim();\n    const userMessage = {\n      sender: 'user',\n      text: prompt,\n      timestamp: new Date().toISOString()\n    };\n    const newMessages = [...messages, userMessage];\n    setMessages(newMessages);\n    setInput('');\n    setIsTyping(true);\n\n    // Try backend AI first\n    try {\n      var _data$ai, _data$ai2, _data$ai2$parsedSched;\n      const resp = await fetch('http://localhost:4000/api/ai/generate-schedule', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          prompt,\n          username\n        })\n      });\n      if (!resp.ok) throw new Error(`AI service responded ${resp.status}`);\n      const data = await resp.json();\n      const aiText = (data === null || data === void 0 ? void 0 : (_data$ai = data.ai) === null || _data$ai === void 0 ? void 0 : _data$ai.text) || extractTextFromAiResponse(data) || JSON.stringify(data.ai || data);\n      const parsedSchedules = data !== null && data !== void 0 && (_data$ai2 = data.ai) !== null && _data$ai2 !== void 0 && (_data$ai2$parsedSched = _data$ai2.parsedSchedules) !== null && _data$ai2$parsedSched !== void 0 && _data$ai2$parsedSched.length ? data.ai.parsedSchedules : parseSchedulesFromText(aiText);\n\n      // Decide whether to auto-add schedules: if parsed schedules exist and the\n      // user's prompt explicitly asked for a study schedule (e.g. \"jadwal belajar\").\n      const promptLower = prompt.toLowerCase();\n      const requestedStudySchedule = /\\bjadwal belajar\\b|\\bbuat jadwal belajar\\b/i.test(promptLower);\n      const aiMessage = {\n        sender: 'ai',\n        text: aiText,\n        timestamp: new Date().toISOString(),\n        // keep actions for manual add only when we did NOT auto-add\n        actions: parsedSchedules.length && !requestedStudySchedule ? ['Tambahkan ke Jadwal'] : [],\n        parsedSchedules\n      };\n      const finalMessages = [...newMessages, aiMessage];\n      setMessages(finalMessages);\n      setIsTyping(false);\n\n      // Save chat to Firebase\n      saveChatToFirebase(finalMessages);\n\n      // If it's a study schedule request and we have parsed schedules, auto-save them\n      if (requestedStudySchedule && parsedSchedules.length) {\n        saveSchedulesToFirebase(parsedSchedules);\n        // update the last AI message to include confirmation text\n        const updatedAiText = aiMessage.text + '\\n\\n✅ Jadwal sudah otomatis ditambahkan ke Jadwal Anda.';\n        const updatedMessages = [...newMessages, {\n          ...aiMessage,\n          text: updatedAiText,\n          actions: []\n        }];\n        setMessages(updatedMessages);\n        saveChatToFirebase(updatedMessages);\n      }\n    } catch (err) {\n      console.warn('AI backend error, falling back to local generator:', err);\n\n      // fallback to local AI generator\n      const aiReply = generateAiResponse(prompt);\n      const aiMessage = {\n        sender: 'ai',\n        text: aiReply.text,\n        timestamp: new Date().toISOString(),\n        actions: aiReply.schedules ? ['Tambahkan ke Jadwal'] : aiReply.actions || [],\n        parsedSchedules: aiReply.schedules || []\n      };\n      const finalMessages = [...newMessages, aiMessage];\n      setMessages(finalMessages);\n      setIsTyping(false);\n      saveChatToFirebase(finalMessages);\n\n      // If the local generator returned schedules and the user explicitly asked\n      // for a study schedule, auto-save them as well.\n      const promptLower = prompt.toLowerCase();\n      const requestedStudySchedule = /\\bjadwal belajar\\b|\\bbuat jadwal belajar\\b/i.test(promptLower);\n      if (requestedStudySchedule && aiMessage.parsedSchedules.length) {\n        saveSchedulesToFirebase(aiMessage.parsedSchedules);\n        const updatedAiText = aiMessage.text + '\\n\\n✅ Jadwal sudah otomatis ditambahkan ke Jadwal Anda.';\n        const updatedMessages = [...newMessages, {\n          ...aiMessage,\n          text: updatedAiText,\n          actions: []\n        }];\n        setMessages(updatedMessages);\n        saveChatToFirebase(updatedMessages);\n      }\n    }\n  };\n\n  // Generate AI Response dengan konteks lebih baik\n  const generateAiResponse = message => {\n    const lower = message.toLowerCase();\n\n    // Jadwal Belajar\n    if (lower.includes(\"jadwal belajar\") || lower.includes(\"buat jadwal belajar\")) {\n      const schedules = [{\n        time: \"08:00\",\n        duration: \"2 jam\",\n        activity: \"Belajar React & JavaScript\",\n        priority: \"Tinggi\"\n      }, {\n        time: \"10:30\",\n        duration: \"30 menit\",\n        activity: \"Istirahat & Snack\",\n        priority: \"Rendah\"\n      }, {\n        time: \"11:00\",\n        duration: \"2 jam\",\n        activity: \"Praktik Coding Project\",\n        priority: \"Tinggi\"\n      }, {\n        time: \"14:00\",\n        duration: \"1 jam\",\n        activity: \"Review Materi & Catatan\",\n        priority: \"Sedang\"\n      }];\n      return {\n        text: `✅ Sempurna! Saya sudah membuatkan jadwal belajar untuk Anda:\\n\\n${schedules.map(s => `⏰ ${s.time} - ${s.activity} (${s.duration})`).join(\"\\n\")}\\n\\n📅 Jadwal ini sudah otomatis ditambahkan ke daftar kegiatan Anda. Anda bisa melihatnya di menu Jadwal!`,\n        schedules,\n        actions: [\"Lihat Jadwal\", \"Ubah Waktu\"]\n      };\n    }\n\n    // Olahraga\n    if (lower.includes(\"olahraga\") || lower.includes(\"workout\")) {\n      const schedules = [{\n        time: \"06:00\",\n        duration: \"45 menit\",\n        activity: \"Jogging Pagi\",\n        priority: \"Sedang\"\n      }, {\n        time: \"16:00\",\n        duration: \"1 jam\",\n        activity: \"Gym / Home Workout\",\n        priority: \"Sedang\"\n      }, {\n        time: \"19:00\",\n        duration: \"30 menit\",\n        activity: \"Yoga & Stretching\",\n        priority: \"Rendah\"\n      }];\n      return {\n        text: `💪 Bagus! Ini jadwal olahraga yang saya rekomendasikan:\\n\\n${schedules.map(s => `⏰ ${s.time} - ${s.activity} (${s.duration})`).join(\"\\n\")}\\n\\n🏃 Konsistensi adalah kunci! Jadwal sudah ditambahkan untuk Anda.`,\n        schedules\n      };\n    }\n\n    // Meeting/Rapat\n    if (lower.includes(\"rapat\") || lower.includes(\"meeting\")) {\n      return {\n        text: \"📊 Untuk meeting, saya sarankan:\\n\\n⏰ Pagi (09:00-11:00): Produktivitas tinggi, cocok untuk diskusi strategis\\n⏰ Siang (13:00-14:00): Post-lunch meeting, lebih santai\\n⏰ Sore (16:00-17:00): Wrap up meeting harian\\n\\nWaktu mana yang paling cocok untuk Anda?\"\n      };\n    }\n\n    // Produktivitas\n    if (lower.includes(\"produktif\") || lower.includes(\"fokus\")) {\n      return {\n        text: \"🎯 Tips produktivitas dari AI Planner:\\n\\n1️⃣ Gunakan teknik Pomodoro (25 menit kerja, 5 menit istirahat)\\n2️⃣ Prioritaskan 3 tugas penting setiap hari\\n3️⃣ Hindari multitasking\\n4️⃣ Blokir waktu untuk deep work\\n5️⃣ Istirahat yang cukup!\\n\\nMau saya buatkan jadwal berbasis Pomodoro?\"\n      };\n    }\n\n    // Libur/Break\n    if (lower.includes(\"libur\") || lower.includes(\"istirahat\") || lower.includes(\"break\")) {\n      return {\n        text: \"🌴 Istirahat sangat penting! Beberapa ide:\\n\\n✨ Weekend getaway\\n📚 Me-time dengan hobi\\n👨‍👩‍👧 Quality time keluarga\\n🎮 Gaming & entertainment\\n\\nSaya akan menandai waktu libur Anda. Kapan Anda ingin istirahat?\"\n      };\n    }\n\n    // Terima kasih\n    if (lower.includes(\"terima kasih\") || lower.includes(\"thanks\")) {\n      return {\n        text: \"😊 Sama-sama! Senang bisa membantu Anda. Jangan ragu untuk bertanya kapan saja!\"\n      };\n    }\n    // Bantuan/Help\n    if (lower.includes(\"bantuan\") || lower.includes(\"help\") || lower.includes(\"bisa apa\")) {\n      return {\n        text: \"🤖 Saya bisa membantu Anda dengan:\\n\\n📅 Membuat jadwal kegiatan otomatis\\n⏰ Rekomendasi waktu optimal untuk aktivitas\\n💡 Tips produktivitas & time management\\n📊 Analisis pola kegiatan Anda\\n🎯 Prioritas tugas harian\\n\\nApa yang bisa saya bantu hari ini?\"\n      };\n    }\n\n    // Default response\n    return {\n      text: \"🤔 Hmm, saya belum sepenuhnya memahami maksud Anda. Bisa dijelaskan lebih detail?\\n\\nContoh yang bisa saya bantu:\\n• \\\"Buatkan jadwal belajar\\\"\\n• \\\"Rekomendasi waktu olahraga\\\"\\n• \\\"Jadwal meeting minggu ini\\\"\\n• \\\"Tips produktif\\\"\"\n    };\n  };\n\n  // Simpan jadwal AI ke Firebase\n  const saveSchedulesToFirebase = schedules => {\n    const scheduleRef = ref(db, `schedules/${username}`);\n    const today = new Date().toISOString().split(\"T\")[0];\n    schedules.forEach(item => {\n      const scheduleData = {\n        kegiatan: item.activity,\n        tanggal: today,\n        waktuMulai: item.time,\n        waktuSelesai: calculateEndTime(item.time, item.duration),\n        lokasi: \"Tidak ditentukan\",\n        prioritas: item.priority || \"Sedang\",\n        catatan: \"Dibuat oleh AI Assistant\",\n        status: \"Belum Dilaksanakan\",\n        createdAt: new Date().toISOString(),\n        createdBy: \"AI\"\n      };\n      const newRef = push(scheduleRef);\n      set(newRef, scheduleData);\n    });\n  };\n\n  // Hitung waktu selesai\n  const calculateEndTime = (startTime, duration) => {\n    const [hours, minutes] = startTime.split(\":\").map(Number);\n    const durationMinutes = parseDuration(duration);\n    const totalMinutes = hours * 60 + minutes + durationMinutes;\n    const endHours = Math.floor(totalMinutes / 60) % 24;\n    const endMinutes = totalMinutes % 60;\n    return `${String(endHours).padStart(2, \"0\")}:${String(endMinutes).padStart(2, \"0\")}`;\n  };\n\n  // Parse duration string\n  const parseDuration = duration => {\n    if (duration.includes(\"jam\")) {\n      const hours = parseFloat(duration);\n      return hours * 60;\n    }\n    if (duration.includes(\"menit\")) {\n      return parseFloat(duration);\n    }\n    return 60; // default 1 jam\n  };\n\n  // Format timestamp\n  const formatTime = timestamp => {\n    const date = new Date(timestamp);\n    return date.toLocaleTimeString(\"id-ID\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\"\n    });\n  };\n\n  // Quick suggestions\n  const quickSuggestions = [\"Buatkan jadwal belajar\", \"Rekomendasi waktu olahraga\", \"Tips produktif\", \"Jadwal meeting\"];\n  const handleQuickSuggestion = suggestion => {\n    setInput(suggestion);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-ai-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ai-avatar\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-indicator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"AI Planner Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"chat-subtitle\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-dot\",\n              children: \"\\u25CF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 15\n            }, this), \" Online - Siap membantu Anda\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-stats\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-icon\",\n            children: \"\\uD83D\\uDCAC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: messages.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-label\",\n            children: \"Pesan\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), messages.length <= 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"suggestions-title\",\n        children: \"\\uD83D\\uDCA1 Coba tanyakan:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-grid\",\n        children: quickSuggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-chip\",\n          onClick: () => handleQuickSuggestion(suggestion),\n          children: suggestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      ref: chatBoxRef,\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: [msg.sender === \"ai\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-icon\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"message-text\",\n              children: msg.text.split(\"\\n\").map((line, i) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [line, i < msg.text.split(\"\\n\").length - 1 && /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 63\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), msg.actions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-actions\",\n              children: msg.actions.map((action, i) => {\n                if (action === 'Tambahkan ke Jadwal') {\n                  return /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"action-btn\",\n                    onClick: () => {\n                      const parsed = msg.parsedSchedules || [];\n                      if (!parsed.length) {\n                        alert('Tidak ada jadwal terdeteksi untuk ditambahkan.');\n                        return;\n                      }\n                      saveSchedulesToFirebase(parsed);\n                      alert('✅ Jadwal berhasil ditambahkan. Cek menu Jadwal.');\n                    },\n                    children: action\n                  }, i, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 27\n                  }, this);\n                }\n                return /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"action-btn\",\n                  children: action\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 25\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-time\",\n            children: formatTime(msg.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), msg.sender === \"user\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar user-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-icon\",\n            children: username.charAt(0).toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message ai\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-icon\",\n            children: \"\\uD83E\\uDD16\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble typing-indicator\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-dots\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"chat-input\",\n          placeholder: \"\\uD83D\\uDCAC Tanyakan sesuatu pada AI Assistant...\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => {\n            if (e.key === \"Enter\" && !e.shiftKey) {\n              e.preventDefault();\n              handleSend();\n            }\n          },\n          rows: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `send-btn ${input.trim() ? \"active\" : \"\"}`,\n          onClick: handleSend,\n          disabled: !input.trim(),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 24 24\",\n            fill: \"currentColor\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 528,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-hint\",\n        children: [\"Tekan \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n          children: \"Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 17\n        }, this), \" untuk kirim \\u2022 \", /*#__PURE__*/_jsxDEV(\"kbd\", {\n          children: \"Shift + Enter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 48\n        }, this), \" untuk baris baru\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatAI, \"JQSgCPox5z4lxeZbGiBm5FSCERM=\");\n_c = ChatAI;\nexport default ChatAI;\nvar _c;\n$RefreshReg$(_c, \"ChatAI\");","map":{"version":3,"names":["React","useState","useEffect","useRef","db","ref","push","set","update","jsxDEV","_jsxDEV","ChatAI","initialChat","_s","input","setInput","messages","setMessages","currentChatId","setCurrentChatId","isTyping","setIsTyping","sessionId","setSessionId","chatBoxRef","username","localStorage","getItem","current","scrollTop","scrollHeight","length","id","Date","now","newSessionId","sender","text","timestamp","toISOString","chatRef","saveChatToFirebase","newMessages","_safeMessages","sanitizeForFirebase","value","Array","isArray","map","out","Object","keys","forEach","k","v","undefined","safeMessages","m","chatData","date","lastMessage","existingRef","e","console","warn","newChatRef","extractTextFromAiResponse","data","ai","_data$ai$candidates","_data$ai$output","_data$ai$output$","_data$ai$output$$cont","_data$ai$output2","_data$ai$output2$","cand","candidates","_cand$output","_cand$output$","_cand$output$$content","_cand$output$$content2","_cand$output2","_cand$output2$","_cand$output2$$conten","text1","output","content","cont","JSON","stringify","parseSchedulesFromText","lines","split","l","trim","filter","Boolean","parsed","timeLineRegex","line","match","time","activity","duration","priority","handleSend","prompt","userMessage","_data$ai","_data$ai2","_data$ai2$parsedSched","resp","fetch","method","headers","body","ok","Error","status","json","aiText","parsedSchedules","promptLower","toLowerCase","requestedStudySchedule","test","aiMessage","actions","finalMessages","saveSchedulesToFirebase","updatedAiText","updatedMessages","err","aiReply","generateAiResponse","schedules","message","lower","includes","s","join","scheduleRef","today","item","scheduleData","kegiatan","tanggal","waktuMulai","waktuSelesai","calculateEndTime","lokasi","prioritas","catatan","createdAt","createdBy","newRef","startTime","hours","minutes","Number","durationMinutes","parseDuration","totalMinutes","endHours","Math","floor","endMinutes","String","padStart","parseFloat","formatTime","toLocaleTimeString","hour","minute","quickSuggestions","handleQuickSuggestion","suggestion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","onClick","msg","i","Fragment","action","alert","charAt","toUpperCase","placeholder","onChange","target","onKeyDown","key","shiftKey","preventDefault","rows","disabled","width","height","viewBox","fill","d","_c","$RefreshReg$"],"sources":["C:/Users/User/AiPlanner/frontend/src/pages/ChatAI.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"../assets/chatai.css\";\r\nimport { db } from \"../config/firebase\";\r\nimport { ref, push, set, update } from \"firebase/database\";\r\n\r\nconst ChatAI = ({ initialChat }) => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [currentChatId, setCurrentChatId] = useState(null);\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [sessionId, setSessionId] = useState(null);\r\n  const chatBoxRef = useRef(null);\r\n\r\n  // Ambil username dari localStorage\r\n  const username = localStorage.getItem(\"username\") || \"guest\";\r\n\r\n  // Auto scroll to bottom\r\n  useEffect(() => {\r\n    if (chatBoxRef.current) {\r\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\r\n    }\r\n  }, [messages, isTyping]);\r\n\r\n  // Generate session ID saat mount\r\n  useEffect(() => {\r\n    // If we have an incoming initialChat (user chose Continue), load it\r\n    if (initialChat && initialChat.messages && initialChat.messages.length) {\r\n      setMessages(initialChat.messages);\r\n      setSessionId(initialChat.sessionId || initialChat.id || `session_${Date.now()}`);\r\n      setCurrentChatId(initialChat.id || null);\r\n      return;\r\n    }\r\n\r\n    // otherwise create a new session and show welcome\r\n    const newSessionId = `session_${Date.now()}`;\r\n    setSessionId(newSessionId);\r\n    setMessages([\r\n      {\r\n        sender: \"ai\",\r\n        text: \"👋 Halo! Saya AI Planner Assistant. Saya siap membantu Anda mengatur jadwal, memberikan rekomendasi waktu produktif, dan menjawab pertanyaan seputar perencanaan kegiatan Anda!\",\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n    ]);\r\n  }, [initialChat]);\r\n\r\n  // Firebase reference untuk chat user\r\n  const chatRef = ref(db, `chats/${username}`);\r\n\r\n  // Simpan chat ke Firebase\r\n  const saveChatToFirebase = (newMessages) => {\r\n    if (!sessionId) return;\r\n    // Firebase Realtime Database disallows `undefined` values. Ensure we\r\n    // remove any undefined properties (or replace them) before writing.\r\n    const sanitizeForFirebase = (value) => {\r\n      if (Array.isArray(value)) return value.map(sanitizeForFirebase);\r\n      if (value && typeof value === \"object\") {\r\n        const out = {};\r\n        Object.keys(value).forEach((k) => {\r\n          const v = value[k];\r\n          if (v === undefined) return; // skip undefined properties\r\n          out[k] = sanitizeForFirebase(v);\r\n        });\r\n        return out;\r\n      }\r\n      return value;\r\n    };\r\n\r\n    const safeMessages = newMessages.map((m) => sanitizeForFirebase(m));\r\n\r\n    const chatData = {\r\n      sessionId,\r\n      date: new Date().toISOString(),\r\n      messages: safeMessages,\r\n      lastMessage: safeMessages[safeMessages.length - 1]?.text || \"\",\r\n    };\r\n\r\n    // If continuing an existing chat, update that record instead of pushing a new one\r\n    try {\r\n      if (currentChatId) {\r\n        const existingRef = ref(db, `chats/${username}/${currentChatId}`);\r\n        // overwrite with updated messages and date\r\n        set(existingRef, chatData);\r\n        return;\r\n      }\r\n    } catch (e) {\r\n      // fall back to push if update fails\r\n      console.warn('Failed to update existing chat, falling back to push:', e);\r\n    }\r\n\r\n    const newChatRef = push(chatRef);\r\n    set(newChatRef, chatData);\r\n  };\r\n\r\n  // helper: try extract text from backend AI response\r\n  const extractTextFromAiResponse = (data) => {\r\n    if (!data) return '';\r\n    // if backend returned normalized ai.text\r\n    if (typeof data.ai === 'string') return data.ai;\r\n    if (data.ai && typeof data.ai === 'object') {\r\n      // Common shapes\r\n      try {\r\n        // v1 style: candidates -> output -> content -> text\r\n        const cand = data.ai.candidates?.[0];\r\n        if (cand) {\r\n          if (typeof cand === 'string') return cand;\r\n          const text1 = cand.output?.[0]?.content?.[0]?.text || cand.output?.[0]?.content?.text;\r\n          if (text1) return text1;\r\n          const cont = cand.content || cand;\r\n          if (typeof cont === 'string') return cont;\r\n        }\r\n\r\n        // direct output\r\n        const out = data.ai.output?.[0]?.content?.text || data.ai.output?.[0]?.content;\r\n        if (out) return out;\r\n      } catch (e) {\r\n        // ignore\r\n      }\r\n      // fallback to stringified\r\n      return JSON.stringify(data.ai);\r\n    }\r\n    return '';\r\n  };\r\n\r\n  // parse lines like '⏰ 08:00 - Belajar React (2 jam)' or '08:00 - Activity (30 menit)'\r\n  const parseSchedulesFromText = (text) => {\r\n    if (!text) return [];\r\n    const lines = text.split(/\\r?\\n/).map((l) => l.trim()).filter(Boolean);\r\n    const parsed = [];\r\n    const timeLineRegex = /(?:.*?)(\\d{1,2}:\\d{2})\\s*[-–—]\\s*(.+?)(?:\\s*\\(([^)]+)\\))?$/;\r\n\r\n    for (const line of lines) {\r\n      const m = line.match(timeLineRegex);\r\n      if (m) {\r\n        const time = m[1];\r\n        const activity = m[2].trim();\r\n        const duration = m[3] ? m[3].trim() : '1 jam';\r\n        parsed.push({ time, activity, duration, priority: 'Sedang' });\r\n      }\r\n    }\r\n    return parsed;\r\n  };\r\n\r\n  // Handle send message (calls backend AI, falls back to local generator)\r\n  const handleSend = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const prompt = input.trim();\r\n\r\n    const userMessage = {\r\n      sender: 'user',\r\n      text: prompt,\r\n      timestamp: new Date().toISOString(),\r\n    };\r\n\r\n    const newMessages = [...messages, userMessage];\r\n    setMessages(newMessages);\r\n    setInput('');\r\n    setIsTyping(true);\r\n\r\n    // Try backend AI first\r\n    try {\r\n      const resp = await fetch('http://localhost:4000/api/ai/generate-schedule', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ prompt, username }),\r\n      });\r\n\r\n      if (!resp.ok) throw new Error(`AI service responded ${resp.status}`);\r\n      const data = await resp.json();\r\n\r\n      const aiText = data?.ai?.text || extractTextFromAiResponse(data) || JSON.stringify(data.ai || data);\r\n      const parsedSchedules = data?.ai?.parsedSchedules?.length ? data.ai.parsedSchedules : parseSchedulesFromText(aiText);\r\n\r\n      // Decide whether to auto-add schedules: if parsed schedules exist and the\r\n      // user's prompt explicitly asked for a study schedule (e.g. \"jadwal belajar\").\r\n      const promptLower = prompt.toLowerCase();\r\n      const requestedStudySchedule = /\\bjadwal belajar\\b|\\bbuat jadwal belajar\\b/i.test(promptLower);\r\n\r\n      const aiMessage = {\r\n        sender: 'ai',\r\n        text: aiText,\r\n        timestamp: new Date().toISOString(),\r\n        // keep actions for manual add only when we did NOT auto-add\r\n        actions: parsedSchedules.length && !requestedStudySchedule ? ['Tambahkan ke Jadwal'] : [],\r\n        parsedSchedules,\r\n      };\r\n\r\n      const finalMessages = [...newMessages, aiMessage];\r\n      setMessages(finalMessages);\r\n      setIsTyping(false);\r\n\r\n      // Save chat to Firebase\r\n      saveChatToFirebase(finalMessages);\r\n\r\n      // If it's a study schedule request and we have parsed schedules, auto-save them\r\n      if (requestedStudySchedule && parsedSchedules.length) {\r\n        saveSchedulesToFirebase(parsedSchedules);\r\n        // update the last AI message to include confirmation text\r\n        const updatedAiText = aiMessage.text + '\\n\\n✅ Jadwal sudah otomatis ditambahkan ke Jadwal Anda.';\r\n        const updatedMessages = [...newMessages, { ...aiMessage, text: updatedAiText, actions: [] }];\r\n        setMessages(updatedMessages);\r\n        saveChatToFirebase(updatedMessages);\r\n      }\r\n    } catch (err) {\r\n      console.warn('AI backend error, falling back to local generator:', err);\r\n\r\n      // fallback to local AI generator\r\n      const aiReply = generateAiResponse(prompt);\r\n      const aiMessage = {\r\n        sender: 'ai',\r\n        text: aiReply.text,\r\n        timestamp: new Date().toISOString(),\r\n        actions: aiReply.schedules ? ['Tambahkan ke Jadwal'] : aiReply.actions || [],\r\n        parsedSchedules: aiReply.schedules || [],\r\n      };\r\n\r\n      const finalMessages = [...newMessages, aiMessage];\r\n      setMessages(finalMessages);\r\n      setIsTyping(false);\r\n      saveChatToFirebase(finalMessages);\r\n\r\n      // If the local generator returned schedules and the user explicitly asked\r\n      // for a study schedule, auto-save them as well.\r\n      const promptLower = prompt.toLowerCase();\r\n      const requestedStudySchedule = /\\bjadwal belajar\\b|\\bbuat jadwal belajar\\b/i.test(promptLower);\r\n      if (requestedStudySchedule && aiMessage.parsedSchedules.length) {\r\n        saveSchedulesToFirebase(aiMessage.parsedSchedules);\r\n        const updatedAiText = aiMessage.text + '\\n\\n✅ Jadwal sudah otomatis ditambahkan ke Jadwal Anda.';\r\n        const updatedMessages = [...newMessages, { ...aiMessage, text: updatedAiText, actions: [] }];\r\n        setMessages(updatedMessages);\r\n        saveChatToFirebase(updatedMessages);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Generate AI Response dengan konteks lebih baik\r\n  const generateAiResponse = (message) => {\r\n    const lower = message.toLowerCase();\r\n\r\n    // Jadwal Belajar\r\n    if (lower.includes(\"jadwal belajar\") || lower.includes(\"buat jadwal belajar\")) {\r\n      const schedules = [\r\n        { time: \"08:00\", duration: \"2 jam\", activity: \"Belajar React & JavaScript\", priority: \"Tinggi\" },\r\n        { time: \"10:30\", duration: \"30 menit\", activity: \"Istirahat & Snack\", priority: \"Rendah\" },\r\n        { time: \"11:00\", duration: \"2 jam\", activity: \"Praktik Coding Project\", priority: \"Tinggi\" },\r\n        { time: \"14:00\", duration: \"1 jam\", activity: \"Review Materi & Catatan\", priority: \"Sedang\" },\r\n      ];\r\n\r\n      return {\r\n        text: `✅ Sempurna! Saya sudah membuatkan jadwal belajar untuk Anda:\\n\\n${schedules\r\n          .map((s) => `⏰ ${s.time} - ${s.activity} (${s.duration})`)\r\n          .join(\"\\n\")}\\n\\n📅 Jadwal ini sudah otomatis ditambahkan ke daftar kegiatan Anda. Anda bisa melihatnya di menu Jadwal!`,\r\n        schedules,\r\n        actions: [\"Lihat Jadwal\", \"Ubah Waktu\"],\r\n      };\r\n    }\r\n\r\n    // Olahraga\r\n    if (lower.includes(\"olahraga\") || lower.includes(\"workout\")) {\r\n      const schedules = [\r\n        { time: \"06:00\", duration: \"45 menit\", activity: \"Jogging Pagi\", priority: \"Sedang\" },\r\n        { time: \"16:00\", duration: \"1 jam\", activity: \"Gym / Home Workout\", priority: \"Sedang\" },\r\n        { time: \"19:00\", duration: \"30 menit\", activity: \"Yoga & Stretching\", priority: \"Rendah\" },\r\n      ];\r\n\r\n      return {\r\n        text: `💪 Bagus! Ini jadwal olahraga yang saya rekomendasikan:\\n\\n${schedules\r\n          .map((s) => `⏰ ${s.time} - ${s.activity} (${s.duration})`)\r\n          .join(\"\\n\")}\\n\\n🏃 Konsistensi adalah kunci! Jadwal sudah ditambahkan untuk Anda.`,\r\n        schedules,\r\n      };\r\n    }\r\n\r\n    // Meeting/Rapat\r\n    if (lower.includes(\"rapat\") || lower.includes(\"meeting\")) {\r\n      return {\r\n        text: \"📊 Untuk meeting, saya sarankan:\\n\\n⏰ Pagi (09:00-11:00): Produktivitas tinggi, cocok untuk diskusi strategis\\n⏰ Siang (13:00-14:00): Post-lunch meeting, lebih santai\\n⏰ Sore (16:00-17:00): Wrap up meeting harian\\n\\nWaktu mana yang paling cocok untuk Anda?\",\r\n      };\r\n    }\r\n\r\n    // Produktivitas\r\n    if (lower.includes(\"produktif\") || lower.includes(\"fokus\")) {\r\n      return {\r\n        text: \"🎯 Tips produktivitas dari AI Planner:\\n\\n1️⃣ Gunakan teknik Pomodoro (25 menit kerja, 5 menit istirahat)\\n2️⃣ Prioritaskan 3 tugas penting setiap hari\\n3️⃣ Hindari multitasking\\n4️⃣ Blokir waktu untuk deep work\\n5️⃣ Istirahat yang cukup!\\n\\nMau saya buatkan jadwal berbasis Pomodoro?\",\r\n      };\r\n    }\r\n\r\n    // Libur/Break\r\n    if (lower.includes(\"libur\") || lower.includes(\"istirahat\") || lower.includes(\"break\")) {\r\n      return {\r\n        text: \"🌴 Istirahat sangat penting! Beberapa ide:\\n\\n✨ Weekend getaway\\n📚 Me-time dengan hobi\\n👨‍👩‍👧 Quality time keluarga\\n🎮 Gaming & entertainment\\n\\nSaya akan menandai waktu libur Anda. Kapan Anda ingin istirahat?\",\r\n      };\r\n    }\r\n\r\n    // Terima kasih\r\n    if (lower.includes(\"terima kasih\") || lower.includes(\"thanks\")) {\r\n      return {\r\n        text: \"😊 Sama-sama! Senang bisa membantu Anda. Jangan ragu untuk bertanya kapan saja!\",\r\n      };\r\n\r\n    }\r\n    // Bantuan/Help\r\n    if (lower.includes(\"bantuan\") || lower.includes(\"help\") || lower.includes(\"bisa apa\")) {\r\n      return {\r\n        text: \"🤖 Saya bisa membantu Anda dengan:\\n\\n📅 Membuat jadwal kegiatan otomatis\\n⏰ Rekomendasi waktu optimal untuk aktivitas\\n💡 Tips produktivitas & time management\\n📊 Analisis pola kegiatan Anda\\n🎯 Prioritas tugas harian\\n\\nApa yang bisa saya bantu hari ini?\",\r\n      };\r\n    }\r\n\r\n    // Default response\r\n    return {\r\n      text: \"🤔 Hmm, saya belum sepenuhnya memahami maksud Anda. Bisa dijelaskan lebih detail?\\n\\nContoh yang bisa saya bantu:\\n• \\\"Buatkan jadwal belajar\\\"\\n• \\\"Rekomendasi waktu olahraga\\\"\\n• \\\"Jadwal meeting minggu ini\\\"\\n• \\\"Tips produktif\\\"\",\r\n    };\r\n  };\r\n\r\n  // Simpan jadwal AI ke Firebase\r\n  const saveSchedulesToFirebase = (schedules) => {\r\n    const scheduleRef = ref(db, `schedules/${username}`);\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n\r\n    schedules.forEach((item) => {\r\n      const scheduleData = {\r\n        kegiatan: item.activity,\r\n        tanggal: today,\r\n        waktuMulai: item.time,\r\n        waktuSelesai: calculateEndTime(item.time, item.duration),\r\n        lokasi: \"Tidak ditentukan\",\r\n        prioritas: item.priority || \"Sedang\",\r\n        catatan: \"Dibuat oleh AI Assistant\",\r\n        status: \"Belum Dilaksanakan\",\r\n        createdAt: new Date().toISOString(),\r\n        createdBy: \"AI\",\r\n      };\r\n\r\n      const newRef = push(scheduleRef);\r\n      set(newRef, scheduleData);\r\n    });\r\n  };\r\n\r\n  // Hitung waktu selesai\r\n  const calculateEndTime = (startTime, duration) => {\r\n    const [hours, minutes] = startTime.split(\":\").map(Number);\r\n    const durationMinutes = parseDuration(duration);\r\n    const totalMinutes = hours * 60 + minutes + durationMinutes;\r\n    const endHours = Math.floor(totalMinutes / 60) % 24;\r\n    const endMinutes = totalMinutes % 60;\r\n    return `${String(endHours).padStart(2, \"0\")}:${String(endMinutes).padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Parse duration string\r\n  const parseDuration = (duration) => {\r\n    if (duration.includes(\"jam\")) {\r\n      const hours = parseFloat(duration);\r\n      return hours * 60;\r\n    }\r\n    if (duration.includes(\"menit\")) {\r\n      return parseFloat(duration);\r\n    }\r\n    return 60; // default 1 jam\r\n  };\r\n\r\n  // Format timestamp\r\n  const formatTime = (timestamp) => {\r\n    const date = new Date(timestamp);\r\n    return date.toLocaleTimeString(\"id-ID\", { hour: \"2-digit\", minute: \"2-digit\" });\r\n  };\r\n\r\n  // Quick suggestions\r\n  const quickSuggestions = [\r\n    \"Buatkan jadwal belajar\",\r\n    \"Rekomendasi waktu olahraga\",\r\n    \"Tips produktif\",\r\n    \"Jadwal meeting\",\r\n  ];\r\n\r\n  const handleQuickSuggestion = (suggestion) => {\r\n    setInput(suggestion);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-ai-container\">\r\n      {/* Header */}\r\n      <div className=\"chat-header\">\r\n        <div className=\"chat-header-content\">\r\n          <div className=\"chat-header-icon\">\r\n            <div className=\"ai-avatar\">🤖</div>\r\n            <div className=\"status-indicator\"></div>\r\n          </div>\r\n          <div className=\"chat-header-text\">\r\n            <h1>AI Planner Assistant</h1>\r\n            <p className=\"chat-subtitle\">\r\n              <span className=\"status-dot\">●</span> Online - Siap membantu Anda\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"chat-stats\">\r\n          <div className=\"stat-item\">\r\n            <span className=\"stat-icon\">💬</span>\r\n            <span className=\"stat-value\">{messages.length}</span>\r\n            <span className=\"stat-label\">Pesan</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Quick Suggestions */}\r\n      {messages.length <= 2 && (\r\n        <div className=\"quick-suggestions\">\r\n          <p className=\"suggestions-title\">💡 Coba tanyakan:</p>\r\n          <div className=\"suggestions-grid\">\r\n            {quickSuggestions.map((suggestion, index) => (\r\n              <button\r\n                key={index}\r\n                className=\"suggestion-chip\"\r\n                onClick={() => handleQuickSuggestion(suggestion)}\r\n              >\r\n                {suggestion}\r\n              </button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Chat Box */}\r\n      <div className=\"chat-box\" ref={chatBoxRef}>\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={`chat-message ${msg.sender}`}>\r\n            {msg.sender === \"ai\" && (\r\n              <div className=\"message-avatar\">\r\n                <div className=\"bot-icon\">🤖</div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"message-content\">\r\n              <div className=\"message-bubble\">\r\n                <p className=\"message-text\">\r\n                  {msg.text.split(\"\\n\").map((line, i) => (\r\n                    <React.Fragment key={i}>\r\n                      {line}\r\n                      {i < msg.text.split(\"\\n\").length - 1 && <br />}\r\n                    </React.Fragment>\r\n                  ))}\r\n                </p>\r\n\r\n                {msg.actions && (\r\n                  <div className=\"message-actions\">\r\n                    {msg.actions.map((action, i) => {\r\n                      if (action === 'Tambahkan ke Jadwal') {\r\n                        return (\r\n                          <button\r\n                            key={i}\r\n                            className=\"action-btn\"\r\n                            onClick={() => {\r\n                              const parsed = msg.parsedSchedules || [];\r\n                              if (!parsed.length) {\r\n                                alert('Tidak ada jadwal terdeteksi untuk ditambahkan.');\r\n                                return;\r\n                              }\r\n                              saveSchedulesToFirebase(parsed);\r\n                              alert('✅ Jadwal berhasil ditambahkan. Cek menu Jadwal.');\r\n                            }}\r\n                          >\r\n                            {action}\r\n                          </button>\r\n                        );\r\n                      }\r\n\r\n                      return (\r\n                        <button key={i} className=\"action-btn\">\r\n                          {action}\r\n                        </button>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <span className=\"message-time\">{formatTime(msg.timestamp)}</span>\r\n            </div>\r\n\r\n            {msg.sender === \"user\" && (\r\n              <div className=\"message-avatar user-avatar\">\r\n                <div className=\"user-icon\">\r\n                  {username.charAt(0).toUpperCase()}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n\r\n        {isTyping && (\r\n          <div className=\"chat-message ai\">\r\n            <div className=\"message-avatar\">\r\n              <div className=\"bot-icon\">🤖</div>\r\n            </div>\r\n            <div className=\"message-content\">\r\n              <div className=\"message-bubble typing-indicator\">\r\n                <div className=\"typing-dots\">\r\n                  <span></span>\r\n                  <span></span>\r\n                  <span></span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input Section */}\r\n      <div className=\"chat-input-section\">\r\n        <div className=\"input-wrapper\">\r\n          <textarea\r\n            className=\"chat-input\"\r\n            placeholder=\"💬 Tanyakan sesuatu pada AI Assistant...\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            onKeyDown={(e) => {\r\n              if (e.key === \"Enter\" && !e.shiftKey) {\r\n                e.preventDefault();\r\n                handleSend();\r\n              }\r\n            }}\r\n            rows=\"1\"\r\n          />\r\n          <button\r\n            className={`send-btn ${input.trim() ? \"active\" : \"\"}`}\r\n            onClick={handleSend}\r\n            disabled={!input.trim()}\r\n          >\r\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n              <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n        <p className=\"input-hint\">\r\n          Tekan <kbd>Enter</kbd> untuk kirim • <kbd>Shift + Enter</kbd> untuk baris baru\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default ChatAI;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}