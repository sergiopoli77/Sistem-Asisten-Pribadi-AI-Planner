{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\SistemAskep\\\\frontend\\\\src\\\\pages\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../assets/Login.css';\nimport { db } from '../config/firebase';\nimport { ref, query, orderByChild, equalTo, get } from 'firebase/database';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [role, setRole] = useState('perawat');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    if (e && e.preventDefault) e.preventDefault();\n    setError('');\n    setLoading(true);\n    const name = (username || '').trim();\n    if (!name || !password) {\n      setError('Username dan password wajib diisi!');\n      setLoading(false);\n      return;\n    }\n    try {\n      const q = query(ref(db, 'users'), orderByChild('nama'), equalTo(name));\n      const snap = await get(q);\n      if (!snap.exists()) {\n        setError('User tidak ditemukan.');\n        setLoading(false);\n        return;\n      }\n      let userRecord;\n      let uid;\n      snap.forEach(child => {\n        uid = child.key;\n        userRecord = child.val();\n      });\n      if (!userRecord.password) {\n        setError('Akun tidak memiliki password.');\n        setLoading(false);\n        return;\n      }\n      if (String(userRecord.password).trim() === String(password).trim()) {\n        const displayName = userRecord.nama || name;\n        const userRole = userRecord.role ? userRecord.role.toLowerCase() : role;\n\n        // Simpan sesi login di state induk\n        onLogin({\n          username: displayName,\n          role: userRole,\n          uid\n        });\n\n        // Redirect ke dashboard\n        navigate(\"/dashboard\");\n        setLoading(false);\n        return;\n      }\n      setError('Password salah.');\n      setLoading(false);\n    } catch (err) {\n      console.error('Login RTDB error:', err);\n      setError('Terjadi error saat verifikasi. Cek koneksi.');\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"5akZxM55REtS9s/pxuOg4y1mr5M=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","db","ref","query","orderByChild","equalTo","get","useNavigate","jsxDEV","_jsxDEV","Login","onLogin","_s","role","setRole","username","setUsername","password","setPassword","loading","setLoading","error","setError","navigate","handleSubmit","e","preventDefault","name","trim","q","snap","exists","userRecord","uid","forEach","child","key","val","String","displayName","nama","userRole","toLowerCase","err","console","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/SistemAskep/frontend/src/pages/login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../assets/Login.css';\r\nimport { db } from '../config/firebase';\r\nimport { ref, query, orderByChild, equalTo, get } from 'firebase/database';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Login = ({ onLogin }) => {\r\n  const [role, setRole] = useState('perawat');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    if (e && e.preventDefault) e.preventDefault();\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    const name = (username || '').trim();\r\n    if (!name || !password) {\r\n      setError('Username dan password wajib diisi!');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const q = query(ref(db, 'users'), orderByChild('nama'), equalTo(name));\r\n      const snap = await get(q);\r\n\r\n      if (!snap.exists()) {\r\n        setError('User tidak ditemukan.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      let userRecord;\r\n      let uid;\r\n      snap.forEach((child) => {\r\n        uid = child.key;\r\n        userRecord = child.val();\r\n      });\r\n\r\n      if (!userRecord.password) {\r\n        setError('Akun tidak memiliki password.');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      if (String(userRecord.password).trim() === String(password).trim()) {\r\n        const displayName = userRecord.nama || name;\r\n        const userRole = userRecord.role ? userRecord.role.toLowerCase() : role;\r\n\r\n        // Simpan sesi login di state induk\r\n        onLogin({ username: displayName, role: userRole, uid });\r\n\r\n        // Redirect ke dashboard\r\n        navigate(\"/dashboard\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      setError('Password salah.');\r\n      setLoading(false);\r\n\r\n    } catch (err) {\r\n      console.error('Login RTDB error:', err);\r\n      setError('Terjadi error saat verifikasi. Cek koneksi.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      {/* ... UI tetap sama ... */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}